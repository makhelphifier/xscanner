#设置储存log文件的根目录
logpath=./Logs
# 配置日志的输出格式: %r耗费毫秒数 %p日志的优先级 %t线程名 %C所属类名通常为全类名 %L代码中的行号 %x线程相关联的NDC %m日志 %n换行
logConversionPattern=[%d{yyyy-MM-dd HH:mm:ss.zzz}][%-20t][%l][%-5p] --> %m %n
 
log4j.reset=true
 
#设置是否监听QDebug输出的字符串
log4j.handleQtMessages=true
#在运行中，是否监视此文件配置的变化
log4j.watchThisFile=false
 
#设置根Logger的输出log等级为All
# log4j.rootLogger日志输出类别和级别：只输出不低于该级别的日志信息	DEBUG < INFO < WARN < ERROR < FATAL
#设置Log输出的几种输出源（appender）：console, daily, rolling
log4j.rootLogger=ALL, console, daily, rolling
 
#############
# 输出到控制台
#############
###############################################################################################
# 配置INFO CONSOLE输出到控制台
log4j.appender.console=org.apache.log4j.ConsoleAppender
# 输出
log4j.appender.console.Target = System.out  
# 配置CONSOLE设置为自定义布局模式
log4j.appender.console.layout=org.apache.log4j.PatternLayout
# 配置logfile为自定义布局模式
log4j.appender.console.layout.ConversionPattern=${logConversionPattern}
###############################################################################################
 
################
# 输出到日志文件中
################
###############################################################################################
# 配置logfile输出到文件中 每日产生文件
log4j.appender.daily=org.apache.log4j.DailyFileAppender
# 输出文件位置此为项目根目录下的logs文件夹中
log4j.appender.daily.file=${logpath}/Log.log
# 日期格式
log4j.appender.daily.datePattern='.'yyyy-MM-dd
#true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是false
log4j.appender.daily.appendFile=true
# 立即输出
log4j.appender.daily.immediateFlush=true
# 输入日志等级
log4j.appender.daily.Threshold = DEBUG  
# 设置保留天数
log4j.appender.daily.keepDays=30
# 配置logfile为自定义布局模式
log4j.appender.daily.layout=org.apache.log4j.PatternLayout
log4j.appender.daily.layout.ConversionPattern=${logConversionPattern}
###############################################################################################
###############################################################################################
# 配置logfile输出到文件中 文件大小到达指定尺寸的时候产生新的日志文件
log4j.appender.rolling=org.apache.log4j.RollingFileAppender
# 输出文件位置此为项目根目录下的logs文件夹中
log4j.appender.rolling.file=${logpath}/LogRolling.log
#true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是false
log4j.appender.rolling.appendFile=true
# 立即输出
log4j.appender.rolling.immediateFlush=true
# 后缀可以是KB,MB,GB达到该大小后创建新的日志文件
log4j.appender.rolling.MaxFileSize=50MB
# 设置滚定文件的最大值5
log4j.appender.rolling.MaxBackupIndex=20
# 配置logfile为自定义布局模式
log4j.appender.rolling.layout=org.apache.log4j.PatternLayout
log4j.appender.rolling.layout.ConversionPattern=${logConversionPattern}
###############################################################################################